---
- hosts: webservers
  any_errors_fatal: true
  gather_facts: false

  vars:
    ansible_user: "{{ project_delivery_user }}"

  tasks:
    # Check if version is provided
    - name: "check 'deploy_version' var"
      fail:
        msg: "You must provide a 'deploy_version' variable in --extra-vars"
      when: deploy_version is not defined
      run_once: true

    # Initialize release process
    - name: "Initialize the deploy root and gather facts"
      deploy_helper:
        path: "{{ project_delivery_path }}"
        release: "{{ deploy_version }}"

    # Check release folder existance
    - name: "Check if the release folder already exists"
      stat:
        path: "{{ deploy_helper.new_release_path }}"
      register: release

    - name: "Test if release folder already exist"
      fail:
        msg: "The release folder {{ deploy_helper.new_release_path }} already exists. Please provide another release or delete release folder."
      when: release.stat.isdir is defined and release.stat.isdir

    # Deploy from archive
    - name: "Create the new release folder"
      file:
        path: "{{ deploy_helper.new_release_path }}"
        state: directory

    # Extract the archive
    - name: "Extract the archive to the new release folder"
      unarchive:
        src: "{{ deploy_release_path }}"
        dest: "{{ deploy_helper.new_release_path }}"

    # Prepare the release
    - name: "Add an unfinished file, to allow cleanup on successful finalize"
      file:
        path: "{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}"
        state: touch

    # Send configuration
    - include_tasks: includes/configure-tasks.yml
      vars:
        project_source_path: "{{ deploy_helper.new_release_path }}"

    # Clear the cache
    - include_tasks: includes/clear-cache-tasks.yml
      vars:
        project_source_path: "{{ deploy_helper.new_release_path }}"

    # Install assets
    - include_tasks: includes/assets-install-tasks.yml
      vars:
        project_source_path: "{{ deploy_helper.new_release_path }}"

    # Update permissions
    - include_tasks: includes/permissions-tasks.yml
      vars:
        project_source_path: "{{ deploy_helper.new_release_path }}"

    # Activate the release
    - name: "Removing the unfinished file"
      file:
        path: "{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}"
        state: absent

    - name: "Switching the symlink"
      deploy_helper:
        path: "{{ project_delivery_path }}"
        release: "{{ deploy_helper.new_release }}"
        state: finalize
        keep_releases: "{{ deploy_keep_releases }}"
